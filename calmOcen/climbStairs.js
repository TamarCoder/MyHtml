"use strict";
function climbStairs(num) {
    // თუ კიბეზე ასასვლელად საფეხურების რაოდენობა არის 0 ან 1, მხოლოდ ერთი გზა არსებობს (ან არაფრის კეთება, ან ერთი ნაბიჯი)
    if (num === 0 || num === 1) {
        return 1; // აბრუნებს 1-ს
    }
    // dp არის მასივი, რომელიც ინახავს i საფეხურამდე ასვლის გზების რაოდენობას.
    // dp[0] = 1 (0 საფეხური — 1 გზა არაფრის კეთებით)
    // dp[1] = 1 (1 საფეხური — 1 გზა 1 ნაბიჯით)
    let dp = [1, 1];
    // ვიწყებთ 2-დან, რადგან 0 და 1 უკვე ვიცით
    for (let i = 2; i <= num; i++) {
        // თითოეულ i საფეხურზე ასასვლელად გზების რაოდენობა არის:
        // გზები (i-1 საფეხურამდე ასასვლელად) + გზები (i-2 საფეხურამდე ასასვლელად)
        // ანუ ბოლო ნაბიჯი ან 1 იყო ან 2
        dp[i] = dp[i - 1] + dp[i - 2]; // მაგალითად, როცა i = 2: dp[2] = dp[1] + dp[0] => 1 + 1 = 2
        // როცა i = 3: dp[3] = dp[2] + dp[1] => 2 + 1 = 3
        // როცა i = 4: dp[4] = dp[3] + dp[2] => 3 + 2 = 5
    }
    // აბრუნებს კიბეზე num საფეხურამდე ასასვლელი გზების რაოდენობას
    return dp[num];
}
// ახლა ვეძახით climbStairs(4) → num = 4
console.log(climbStairs(4)); // აბრუნებს 5, რადგან 4 საფეხურზე ასვლის 5 განსხვავებული გზა არსებობს
